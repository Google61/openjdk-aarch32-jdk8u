name: CI
on:
  push:
    branches: [ kitkat ]
  pull_request:
    branches: [ kitkat ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        arch: [ "aarch32" ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: openjdk
          
      - name: Checkout build scripts
        run: |
              git init .
              git remote add origin https://github.com/Google61/android-openjdk-build-multiarch
              git pull origin kitkat
              
      - name: Setup JDK 1.7
        uses: actions/setup-java@v1
        with:
          java-version: 1.7
          
      - name: Setup NDK r10e
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r10e
          add-to-path: false
      
      - name: Add NDK to script & make toolchain
        run: echo "export NDK=$NDK_R10E">>./ci_build_arch_${{matrix.arch}}.sh && . ci_build_arch_${{matrix.arch}}.sh && ./maketoolchain.sh
        env:
          NDK_R10E: ${{ steps.setup-ndk.outputs.ndk-path }}
      
      - name: Get & build external libraries
        run: . ci_build_arch_${{matrix.arch}}.sh && ./getlibs.sh && ./buildlibs.sh
  
      - name: Build JDK
        run: . ci_build_arch_${{matrix.arch}}.sh && ./buildjdk.sh && ./removejdkdebuginfo.sh && ./tarjdk.sh
          
      - name: Upload JDK build output
        uses: actions/upload-artifact@v2
        with:
          name: "jdk8-${{matrix.arch}}"
          path: jdk8*.tar.xz
          
      - name: Upload JRE build output
        uses: actions/upload-artifact@v2
        with:
          name: 'jre8-${{matrix.arch}}'
          path: jre8*.tar.xz
          
      - name: Upload JRE debuginfo build output
        uses: actions/upload-artifact@v2
        with:
          name: "jre8-debuginfo-${{matrix.arch}}"
          path: dizout
